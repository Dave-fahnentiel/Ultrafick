import RPi.GPIO as GPIO
import time
#GPIO.setwarnings(False)
# Pins für den Ultraschallsensor
GPIO_TRIGGER = 40
GPIO_ECHO = 38

# Pin für die rote LED
GPIO_LED = 12

# Setzen der Pin-Nummerierung und Festlegen der Pin-Eingabe und Ausgabe
GPIO.setmode(GPIO.BOARD)
GPIO.setup(GPIO_TRIGGER, GPIO.OUT)
GPIO.setup(GPIO_ECHO, GPIO.IN)
GPIO.setup(GPIO_LED, GPIO.OUT)

def distance():
    # Senden des Trigger-Impulses an den Sensor
    GPIO.output(GPIO_TRIGGER, True)
    time.sleep(0.00001)
    GPIO.output(GPIO_TRIGGER, False)

    start_time = time.time()
    stop_time = time.time()

    # Ermittlung der Start- und Stop-Zeit des Echos
    while GPIO.input(GPIO_ECHO) == 0:
        start_time = time.time()

    while GPIO.input(GPIO_ECHO) == 1:
        stop_time = time.time()

    # Berechnung der Entfernung basierend auf der Zeit des Echos
    time_elapsed = stop_time - start_time
    distance_cm = (time_elapsed * 34300) / 2

    return distance_cm

try:
    while True:
        dist = distance()
        print("Abstand: %.1f cm" % dist)

        # Wenn der Abstand weniger als 10 cm beträgt, lässt die LED aufleuchten und "Achtung!" wird geprintet
        if dist < 10:
            GPIO.output(GPIO_LED, True)
            print("Achtung!")
        else:
            GPIO.output(GPIO_LED, False)

        time.sleep(0.5)
        
        if dist < 30:
            GPIO.output(IN1, GPIO.LOW)
            GPIO.output(IN2, GPIO.LOW)
            GPIO.output(IN3, GPIO.LOW)
            GPIO.output(IN4, GPIO.LOW)

        else:
            GPIO.output(IN1, GPIO.HIGH)
            GPIO.output(IN2, GPIO.LOW)
            GPIO.output(IN3, GPIO.HIGH)
            GPIO.output(IN4, GPIO.LOW)
            
except KeyboardInterrupt:
    # Zurücksetzen der Pins auf Standardwerte
    GPIO.cleanup()
